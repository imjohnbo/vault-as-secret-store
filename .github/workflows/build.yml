# Example using HashiCorp Vault in place of the GitHub Actions secret store.
#
# This workflow leverages self hosted runners, a community action (RichiCoder1/vault-action), and a pre-configured AppRole and policy.
# 
# Setup: See Setup steps in README.md
on:
  push

name: Docker build

jobs:
  build:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2

    # The env context is not pre-populated with the self hosted runner's environment variables
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#env-context
    # - name: Add masks for environment variables
    #   run: |
    #     echo "::add-mask::$ROLE_ID"
    #     echo "::add-mask::$SECRET_ID"

    # - name: Set environment variables
    #   run: |
    #     echo "::set-env name=ROLE_ID::$ROLE_ID"
    #     echo "::set-env name=SECRET_ID::$SECRET_ID"

    - name: Import Secrets
      uses: RichiCoder1/vault-action@v1.0.1
      with:
        url: 'http://localhost:8200'
        method: approle
        roleId: ${{ env.ROLE_ID }}
        secretId: ${{ env.SECRET_ID }}
        secrets: |
            docker/creds token | DOCKER_TOKEN ;
            docker/creds login | DOCKER_LOGIN

    - name: Docker Login
      run: |
        echo "$DOCKER_TOKEN" | docker login --username "$DOCKER_LOGIN" --password-stdin